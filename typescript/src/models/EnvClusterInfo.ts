/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClusterDTO } from './ClusterDTO';
import {
    ClusterDTOFromJSON,
    ClusterDTOFromJSONTyped,
    ClusterDTOToJSON,
    ClusterDTOToJSONTyped,
} from './ClusterDTO';

/**
 * 
 * @export
 * @interface EnvClusterInfo
 */
export interface EnvClusterInfo {
    /**
     * 
     * @type {string}
     * @memberof EnvClusterInfo
     */
    env?: string;
    /**
     * 
     * @type {Array<ClusterDTO>}
     * @memberof EnvClusterInfo
     */
    clusters?: Array<ClusterDTO>;
}

/**
 * Check if a given object implements the EnvClusterInfo interface.
 */
export function instanceOfEnvClusterInfo(value: object): value is EnvClusterInfo {
    return true;
}

export function EnvClusterInfoFromJSON(json: any): EnvClusterInfo {
    return EnvClusterInfoFromJSONTyped(json, false);
}

export function EnvClusterInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnvClusterInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'env': json['env'] == null ? undefined : json['env'],
        'clusters': json['clusters'] == null ? undefined : ((json['clusters'] as Array<any>).map(ClusterDTOFromJSON)),
    };
}

export function EnvClusterInfoToJSON(json: any): EnvClusterInfo {
    return EnvClusterInfoToJSONTyped(json, false);
}

export function EnvClusterInfoToJSONTyped(value?: EnvClusterInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'env': value['env'],
        'clusters': value['clusters'] == null ? undefined : ((value['clusters'] as Array<any>).map(ClusterDTOToJSON)),
    };
}

