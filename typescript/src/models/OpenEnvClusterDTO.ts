/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface OpenEnvClusterDTO
 */
export interface OpenEnvClusterDTO {
    /**
     * 环境标识，例如 DEV、FAT、UAT、PROD
     * @type {string}
     * @memberof OpenEnvClusterDTO
     */
    env?: string;
    /**
     * 该环境下的集群名称列表
     * @type {Array<string>}
     * @memberof OpenEnvClusterDTO
     */
    clusters?: Array<string>;
}

/**
 * Check if a given object implements the OpenEnvClusterDTO interface.
 */
export function instanceOfOpenEnvClusterDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpenEnvClusterDTOFromJSON(json: any): OpenEnvClusterDTO {
    return OpenEnvClusterDTOFromJSONTyped(json, false);
}

export function OpenEnvClusterDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenEnvClusterDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'env': !exists(json, 'env') ? undefined : json['env'],
        'clusters': !exists(json, 'clusters') ? undefined : json['clusters'],
    };
}

export function OpenEnvClusterDTOToJSON(value?: OpenEnvClusterDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'env': value.env,
        'clusters': value.clusters,
    };
}
