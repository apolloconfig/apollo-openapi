/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpenReleaseDTO } from './OpenReleaseDTO';
import {
    OpenReleaseDTOFromJSON,
    OpenReleaseDTOFromJSONTyped,
    OpenReleaseDTOToJSON,
    OpenReleaseDTOToJSONTyped,
} from './OpenReleaseDTO';

/**
 * 
 * @export
 * @interface OpenInstanceConfigDTO
 */
export interface OpenInstanceConfigDTO {
    /**
     * 
     * @type {OpenReleaseDTO}
     * @memberof OpenInstanceConfigDTO
     */
    release?: OpenReleaseDTO;
    /**
     * 
     * @type {string}
     * @memberof OpenInstanceConfigDTO
     */
    releaseDeliveryTime?: string;
    /**
     * 
     * @type {string}
     * @memberof OpenInstanceConfigDTO
     */
    dataChangeLastModifiedTime?: string;
}

/**
 * Check if a given object implements the OpenInstanceConfigDTO interface.
 */
export function instanceOfOpenInstanceConfigDTO(value: object): value is OpenInstanceConfigDTO {
    return true;
}

export function OpenInstanceConfigDTOFromJSON(json: any): OpenInstanceConfigDTO {
    return OpenInstanceConfigDTOFromJSONTyped(json, false);
}

export function OpenInstanceConfigDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenInstanceConfigDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'release': json['release'] == null ? undefined : OpenReleaseDTOFromJSON(json['release']),
        'releaseDeliveryTime': json['releaseDeliveryTime'] == null ? undefined : json['releaseDeliveryTime'],
        'dataChangeLastModifiedTime': json['dataChangeLastModifiedTime'] == null ? undefined : json['dataChangeLastModifiedTime'],
    };
}

export function OpenInstanceConfigDTOToJSON(json: any): OpenInstanceConfigDTO {
    return OpenInstanceConfigDTOToJSONTyped(json, false);
}

export function OpenInstanceConfigDTOToJSONTyped(value?: OpenInstanceConfigDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'release': OpenReleaseDTOToJSON(value['release']),
        'releaseDeliveryTime': value['releaseDeliveryTime'],
        'dataChangeLastModifiedTime': value['dataChangeLastModifiedTime'],
    };
}

