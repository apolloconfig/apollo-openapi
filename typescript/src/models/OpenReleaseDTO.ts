/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MapString } from './MapString';
import {
    MapStringFromJSON,
    MapStringFromJSONTyped,
    MapStringToJSON,
    MapStringToJSONTyped,
} from './MapString';

/**
 * Apollo发布信息数据传输对象，表示一次配置发布的完整信息
 * @export
 * @interface OpenReleaseDTO
 */
export interface OpenReleaseDTO {
    /**
     * 发布创建者用户名，记录是谁创建了这次发布
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeCreatedBy?: string;
    /**
     * 发布最后修改者用户名，记录最后一次修改发布信息的用户
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeLastModifiedBy?: string;
    /**
     * 发布创建时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeCreatedTime?: string;
    /**
     * 发布最后修改时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeLastModifiedTime?: string;
    /**
     * 发布记录的唯一标识符，系统自动生成
     * @type {number}
     * @memberof OpenReleaseDTO
     */
    id?: number;
    /**
     * 所属应用的唯一标识符
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    appId?: string;
    /**
     * 所属集群的名称
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    clusterName?: string;
    /**
     * 所属命名空间的名称
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    namespaceName?: string;
    /**
     * 发布名称，用于标识这次发布的版本或描述
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    name?: string;
    /**
     * 
     * @type {MapString}
     * @memberof OpenReleaseDTO
     */
    configurations?: MapString;
    /**
     * 发布备注，描述本次发布的变更内容和目的
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    comment?: string;
}

/**
 * Check if a given object implements the OpenReleaseDTO interface.
 */
export function instanceOfOpenReleaseDTO(value: object): value is OpenReleaseDTO {
    return true;
}

export function OpenReleaseDTOFromJSON(json: any): OpenReleaseDTO {
    return OpenReleaseDTOFromJSONTyped(json, false);
}

export function OpenReleaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenReleaseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'dataChangeCreatedBy': json['dataChangeCreatedBy'] == null ? undefined : json['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': json['dataChangeLastModifiedBy'] == null ? undefined : json['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': json['dataChangeCreatedTime'] == null ? undefined : json['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': json['dataChangeLastModifiedTime'] == null ? undefined : json['dataChangeLastModifiedTime'],
        'id': json['id'] == null ? undefined : json['id'],
        'appId': json['appId'] == null ? undefined : json['appId'],
        'clusterName': json['clusterName'] == null ? undefined : json['clusterName'],
        'namespaceName': json['namespaceName'] == null ? undefined : json['namespaceName'],
        'name': json['name'] == null ? undefined : json['name'],
        'configurations': json['configurations'] == null ? undefined : MapStringFromJSON(json['configurations']),
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function OpenReleaseDTOToJSON(json: any): OpenReleaseDTO {
    return OpenReleaseDTOToJSONTyped(json, false);
}

export function OpenReleaseDTOToJSONTyped(value?: OpenReleaseDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataChangeCreatedBy': value['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': value['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': value['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': value['dataChangeLastModifiedTime'],
        'id': value['id'],
        'appId': value['appId'],
        'clusterName': value['clusterName'],
        'namespaceName': value['namespaceName'],
        'name': value['name'],
        'configurations': MapStringToJSON(value['configurations']),
        'comment': value['comment'],
    };
}

