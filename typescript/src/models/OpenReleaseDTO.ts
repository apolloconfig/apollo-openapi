/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Apollo发布信息数据传输对象，表示一次配置发布的完整信息
 * @export
 * @interface OpenReleaseDTO
 */
export interface OpenReleaseDTO {
    /**
     * 发布创建者用户名，记录是谁创建了这次发布
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeCreatedBy?: string;
    /**
     * 发布最后修改者用户名，记录最后一次修改发布信息的用户
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeLastModifiedBy?: string;
    /**
     * 发布创建时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeCreatedTime?: string;
    /**
     * 发布最后修改时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    dataChangeLastModifiedTime?: string;
    /**
     * 发布记录的唯一标识符，系统自动生成
     * @type {number}
     * @memberof OpenReleaseDTO
     */
    id?: number;
    /**
     * 所属应用的唯一标识符
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    appId?: string;
    /**
     * 所属集群的名称
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    clusterName?: string;
    /**
     * 所属命名空间的名称
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    namespaceName?: string;
    /**
     * 发布名称，用于标识这次发布的版本或描述
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    name?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof OpenReleaseDTO
     */
    configurations?: { [key: string]: string; };
    /**
     * 发布备注，描述本次发布的变更内容和目的
     * @type {string}
     * @memberof OpenReleaseDTO
     */
    comment?: string;
}

/**
 * Check if a given object implements the OpenReleaseDTO interface.
 */
export function instanceOfOpenReleaseDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpenReleaseDTOFromJSON(json: any): OpenReleaseDTO {
    return OpenReleaseDTOFromJSONTyped(json, false);
}

export function OpenReleaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenReleaseDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'dataChangeCreatedBy': !exists(json, 'dataChangeCreatedBy') ? undefined : json['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': !exists(json, 'dataChangeLastModifiedBy') ? undefined : json['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': !exists(json, 'dataChangeCreatedTime') ? undefined : json['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': !exists(json, 'dataChangeLastModifiedTime') ? undefined : json['dataChangeLastModifiedTime'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'appId': !exists(json, 'appId') ? undefined : json['appId'],
        'clusterName': !exists(json, 'clusterName') ? undefined : json['clusterName'],
        'namespaceName': !exists(json, 'namespaceName') ? undefined : json['namespaceName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'configurations': !exists(json, 'configurations') ? undefined : json['configurations'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
    };
}

export function OpenReleaseDTOToJSON(value?: OpenReleaseDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'dataChangeCreatedBy': value.dataChangeCreatedBy,
        'dataChangeLastModifiedBy': value.dataChangeLastModifiedBy,
        'dataChangeCreatedTime': value.dataChangeCreatedTime,
        'dataChangeLastModifiedTime': value.dataChangeLastModifiedTime,
        'id': value.id,
        'appId': value.appId,
        'clusterName': value.clusterName,
        'namespaceName': value.namespaceName,
        'name': value.name,
        'configurations': value.configurations,
        'comment': value.comment,
    };
}
