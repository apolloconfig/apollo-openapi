/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Apollo配置项数据传输对象，表示一个具体的配置键值对及其元数据
 * @export
 * @interface OpenItemDTO
 */
export interface OpenItemDTO {
    /**
     * 配置项创建者用户名，记录是谁创建了这个配置项
     * @type {string}
     * @memberof OpenItemDTO
     */
    dataChangeCreatedBy?: string;
    /**
     * 配置项最后修改者用户名，记录最后一次修改配置的用户
     * @type {string}
     * @memberof OpenItemDTO
     */
    dataChangeLastModifiedBy?: string;
    /**
     * 配置项创建时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenItemDTO
     */
    dataChangeCreatedTime?: string;
    /**
     * 配置项最后修改时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenItemDTO
     */
    dataChangeLastModifiedTime?: string;
    /**
     * 配置项的键名，在同一命名空间内唯一标识一个配置项
     * @type {string}
     * @memberof OpenItemDTO
     */
    key?: string;
    /**
     * 配置项类型，0表示普通配置项，1表示文件类型配置项
     * @type {number}
     * @memberof OpenItemDTO
     */
    type?: number;
    /**
     * 配置项的值，可以是字符串、数字、JSON等格式
     * @type {string}
     * @memberof OpenItemDTO
     */
    value?: string;
    /**
     * 配置项的注释说明，用于描述配置项的用途和含义
     * @type {string}
     * @memberof OpenItemDTO
     */
    comment?: string;
}

/**
 * Check if a given object implements the OpenItemDTO interface.
 */
export function instanceOfOpenItemDTO(value: object): value is OpenItemDTO {
    return true;
}

export function OpenItemDTOFromJSON(json: any): OpenItemDTO {
    return OpenItemDTOFromJSONTyped(json, false);
}

export function OpenItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'dataChangeCreatedBy': json['dataChangeCreatedBy'] == null ? undefined : json['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': json['dataChangeLastModifiedBy'] == null ? undefined : json['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': json['dataChangeCreatedTime'] == null ? undefined : json['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': json['dataChangeLastModifiedTime'] == null ? undefined : json['dataChangeLastModifiedTime'],
        'key': json['key'] == null ? undefined : json['key'],
        'type': json['type'] == null ? undefined : json['type'],
        'value': json['value'] == null ? undefined : json['value'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function OpenItemDTOToJSON(json: any): OpenItemDTO {
    return OpenItemDTOToJSONTyped(json, false);
}

export function OpenItemDTOToJSONTyped(value?: OpenItemDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataChangeCreatedBy': value['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': value['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': value['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': value['dataChangeLastModifiedTime'],
        'key': value['key'],
        'type': value['type'],
        'value': value['value'],
        'comment': value['comment'],
    };
}

