/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpenInstanceDTO } from './OpenInstanceDTO';
import {
    OpenInstanceDTOFromJSON,
    OpenInstanceDTOFromJSONTyped,
    OpenInstanceDTOToJSON,
    OpenInstanceDTOToJSONTyped,
} from './OpenInstanceDTO';

/**
 * 分页实例数据传输对象，用于返回分页查询的实例列表结果
 * @export
 * @interface OpenPageDTOOpenInstanceDTO
 */
export interface OpenPageDTOOpenInstanceDTO {
    /**
     * 当前页码，从0开始计数
     * @type {number}
     * @memberof OpenPageDTOOpenInstanceDTO
     */
    page?: number;
    /**
     * 每页显示的记录数量
     * @type {number}
     * @memberof OpenPageDTOOpenInstanceDTO
     */
    size?: number;
    /**
     * 总记录数，符合查询条件的实例总数量
     * @type {number}
     * @memberof OpenPageDTOOpenInstanceDTO
     */
    total?: number;
    /**
     * 当前页的实例列表，包含具体的实例数据
     * @type {Array<OpenInstanceDTO>}
     * @memberof OpenPageDTOOpenInstanceDTO
     */
    content?: Array<OpenInstanceDTO>;
}

/**
 * Check if a given object implements the OpenPageDTOOpenInstanceDTO interface.
 */
export function instanceOfOpenPageDTOOpenInstanceDTO(value: object): value is OpenPageDTOOpenInstanceDTO {
    return true;
}

export function OpenPageDTOOpenInstanceDTOFromJSON(json: any): OpenPageDTOOpenInstanceDTO {
    return OpenPageDTOOpenInstanceDTOFromJSONTyped(json, false);
}

export function OpenPageDTOOpenInstanceDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenPageDTOOpenInstanceDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'page': json['page'] == null ? undefined : json['page'],
        'size': json['size'] == null ? undefined : json['size'],
        'total': json['total'] == null ? undefined : json['total'],
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(OpenInstanceDTOFromJSON)),
    };
}

export function OpenPageDTOOpenInstanceDTOToJSON(json: any): OpenPageDTOOpenInstanceDTO {
    return OpenPageDTOOpenInstanceDTOToJSONTyped(json, false);
}

export function OpenPageDTOOpenInstanceDTOToJSONTyped(value?: OpenPageDTOOpenInstanceDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': value['page'],
        'size': value['size'],
        'total': value['total'],
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(OpenInstanceDTOToJSON)),
    };
}

