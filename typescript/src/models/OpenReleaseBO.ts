/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KVEntity } from './KVEntity';
import {
    KVEntityFromJSON,
    KVEntityFromJSONTyped,
    KVEntityToJSON,
} from './KVEntity';
import type { OpenReleaseDTO } from './OpenReleaseDTO';
import {
    OpenReleaseDTOFromJSON,
    OpenReleaseDTOFromJSONTyped,
    OpenReleaseDTOToJSON,
} from './OpenReleaseDTO';

/**
 *
 * @export
 * @interface OpenReleaseBO
 */
export interface OpenReleaseBO {
    /**
     *
     * @type {OpenReleaseDTO}
     * @memberof OpenReleaseBO
     */
    baseInfo?: OpenReleaseDTO;
    /**
     *
     * @type {Array<KVEntity>}
     * @memberof OpenReleaseBO
     */
    items?: Array<KVEntity>;
}

/**
 * Check if a given object implements the OpenReleaseBO interface.
 */
export function instanceOfOpenReleaseBO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpenReleaseBOFromJSON(json: any): OpenReleaseBO {
    return OpenReleaseBOFromJSONTyped(json, false);
}

export function OpenReleaseBOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenReleaseBO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'baseInfo': !exists(json, 'baseInfo') ? undefined : OpenReleaseDTOFromJSON(json['baseInfo']),
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(KVEntityFromJSON)),
    };
}

export function OpenReleaseBOToJSON(value?: OpenReleaseBO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'baseInfo': OpenReleaseDTOToJSON(value.baseInfo),
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(KVEntityToJSON)),
    };
}
