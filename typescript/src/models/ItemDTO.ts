/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemDTO
 */
export interface ItemDTO {
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    dataChangeCreatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    dataChangeLastModifiedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    dataChangeCreatedByDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    dataChangeLastModifiedByDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    dataChangeCreatedTime?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    dataChangeLastModifiedTime?: string;
    /**
     * 
     * @type {number}
     * @memberof ItemDTO
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ItemDTO
     */
    namespaceId?: number;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    key?: string;
    /**
     * 
     * @type {number}
     * @memberof ItemDTO
     */
    type?: number;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemDTO
     */
    comment?: string;
    /**
     * 
     * @type {number}
     * @memberof ItemDTO
     */
    lineNum?: number;
}

/**
 * Check if a given object implements the ItemDTO interface.
 */
export function instanceOfItemDTO(value: object): value is ItemDTO {
    return true;
}

export function ItemDTOFromJSON(json: any): ItemDTO {
    return ItemDTOFromJSONTyped(json, false);
}

export function ItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'dataChangeCreatedBy': json['dataChangeCreatedBy'] == null ? undefined : json['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': json['dataChangeLastModifiedBy'] == null ? undefined : json['dataChangeLastModifiedBy'],
        'dataChangeCreatedByDisplayName': json['dataChangeCreatedByDisplayName'] == null ? undefined : json['dataChangeCreatedByDisplayName'],
        'dataChangeLastModifiedByDisplayName': json['dataChangeLastModifiedByDisplayName'] == null ? undefined : json['dataChangeLastModifiedByDisplayName'],
        'dataChangeCreatedTime': json['dataChangeCreatedTime'] == null ? undefined : json['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': json['dataChangeLastModifiedTime'] == null ? undefined : json['dataChangeLastModifiedTime'],
        'id': json['id'] == null ? undefined : json['id'],
        'namespaceId': json['namespaceId'] == null ? undefined : json['namespaceId'],
        'key': json['key'] == null ? undefined : json['key'],
        'type': json['type'] == null ? undefined : json['type'],
        'value': json['value'] == null ? undefined : json['value'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'lineNum': json['lineNum'] == null ? undefined : json['lineNum'],
    };
}

export function ItemDTOToJSON(json: any): ItemDTO {
    return ItemDTOToJSONTyped(json, false);
}

export function ItemDTOToJSONTyped(value?: ItemDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataChangeCreatedBy': value['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': value['dataChangeLastModifiedBy'],
        'dataChangeCreatedByDisplayName': value['dataChangeCreatedByDisplayName'],
        'dataChangeLastModifiedByDisplayName': value['dataChangeLastModifiedByDisplayName'],
        'dataChangeCreatedTime': value['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': value['dataChangeLastModifiedTime'],
        'id': value['id'],
        'namespaceId': value['namespaceId'],
        'key': value['key'],
        'type': value['type'],
        'value': value['value'],
        'comment': value['comment'],
        'lineNum': value['lineNum'],
    };
}

