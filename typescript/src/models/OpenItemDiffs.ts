/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OpenItemChangeSets } from './OpenItemChangeSets';
import {
    OpenItemChangeSetsFromJSON,
    OpenItemChangeSetsFromJSONTyped,
    OpenItemChangeSetsToJSON,
} from './OpenItemChangeSets';
import type { OpenNamespaceIdentifier } from './OpenNamespaceIdentifier';
import {
    OpenNamespaceIdentifierFromJSON,
    OpenNamespaceIdentifierFromJSONTyped,
    OpenNamespaceIdentifierToJSON,
} from './OpenNamespaceIdentifier';

/**
 *
 * @export
 * @interface OpenItemDiffs
 */
export interface OpenItemDiffs {
    /**
     *
     * @type {OpenNamespaceIdentifier}
     * @memberof OpenItemDiffs
     */
    namespace?: OpenNamespaceIdentifier;
    /**
     *
     * @type {OpenItemChangeSets}
     * @memberof OpenItemDiffs
     */
    diffs?: OpenItemChangeSets;
    /**
     * 扩展信息
     * @type {string}
     * @memberof OpenItemDiffs
     */
    extInfo?: string;
}

/**
 * Check if a given object implements the OpenItemDiffs interface.
 */
export function instanceOfOpenItemDiffs(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OpenItemDiffsFromJSON(json: any): OpenItemDiffs {
    return OpenItemDiffsFromJSONTyped(json, false);
}

export function OpenItemDiffsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenItemDiffs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'namespace': !exists(json, 'namespace') ? undefined : OpenNamespaceIdentifierFromJSON(json['namespace']),
        'diffs': !exists(json, 'diffs') ? undefined : OpenItemChangeSetsFromJSON(json['diffs']),
        'extInfo': !exists(json, 'extInfo') ? undefined : json['extInfo'],
    };
}

export function OpenItemDiffsToJSON(value?: OpenItemDiffs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'namespace': OpenNamespaceIdentifierToJSON(value.namespace),
        'diffs': OpenItemChangeSetsToJSON(value.diffs),
        'extInfo': value.extInfo,
    };
}
