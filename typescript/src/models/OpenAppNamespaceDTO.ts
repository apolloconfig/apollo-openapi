/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Apollo应用命名空间数据传输对象，表示应用级别的命名空间配置信息
 * @export
 * @interface OpenAppNamespaceDTO
 */
export interface OpenAppNamespaceDTO {
    /**
     * 命名空间创建者用户名，记录是谁创建了这个应用命名空间
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    dataChangeCreatedBy?: string;
    /**
     * 命名空间最后修改者用户名，记录最后一次修改命名空间信息的用户
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    dataChangeLastModifiedBy?: string;
    /**
     * 命名空间创建时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    dataChangeCreatedTime?: string;
    /**
     * 命名空间最后修改时间，ISO 8601格式的时间戳
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    dataChangeLastModifiedTime?: string;
    /**
     * 命名空间名称，在同一应用内唯一标识一个命名空间
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    name?: string;
    /**
     * 所属应用的唯一标识符
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    appId?: string;
    /**
     * 命名空间格式类型，如properties、xml、json、yml等
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    format?: string;
    /**
     * 是否为公共命名空间，公共命名空间可以被其他应用关联使用
     * @type {boolean}
     * @memberof OpenAppNamespaceDTO
     */
    isPublic?: boolean;
    /**
     * 对于公共命名空间，是否在命名空间名称前添加前缀
     * @type {boolean}
     * @memberof OpenAppNamespaceDTO
     */
    appendNamespacePrefix?: boolean;
    /**
     * 命名空间备注说明，描述命名空间的用途和包含的配置类型
     * @type {string}
     * @memberof OpenAppNamespaceDTO
     */
    comment?: string;
}

/**
 * Check if a given object implements the OpenAppNamespaceDTO interface.
 */
export function instanceOfOpenAppNamespaceDTO(value: object): value is OpenAppNamespaceDTO {
    return true;
}

export function OpenAppNamespaceDTOFromJSON(json: any): OpenAppNamespaceDTO {
    return OpenAppNamespaceDTOFromJSONTyped(json, false);
}

export function OpenAppNamespaceDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenAppNamespaceDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'dataChangeCreatedBy': json['dataChangeCreatedBy'] == null ? undefined : json['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': json['dataChangeLastModifiedBy'] == null ? undefined : json['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': json['dataChangeCreatedTime'] == null ? undefined : json['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': json['dataChangeLastModifiedTime'] == null ? undefined : json['dataChangeLastModifiedTime'],
        'name': json['name'] == null ? undefined : json['name'],
        'appId': json['appId'] == null ? undefined : json['appId'],
        'format': json['format'] == null ? undefined : json['format'],
        'isPublic': json['isPublic'] == null ? undefined : json['isPublic'],
        'appendNamespacePrefix': json['appendNamespacePrefix'] == null ? undefined : json['appendNamespacePrefix'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function OpenAppNamespaceDTOToJSON(json: any): OpenAppNamespaceDTO {
    return OpenAppNamespaceDTOToJSONTyped(json, false);
}

export function OpenAppNamespaceDTOToJSONTyped(value?: OpenAppNamespaceDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataChangeCreatedBy': value['dataChangeCreatedBy'],
        'dataChangeLastModifiedBy': value['dataChangeLastModifiedBy'],
        'dataChangeCreatedTime': value['dataChangeCreatedTime'],
        'dataChangeLastModifiedTime': value['dataChangeLastModifiedTime'],
        'name': value['name'],
        'appId': value['appId'],
        'format': value['format'],
        'isPublic': value['isPublic'],
        'appendNamespacePrefix': value['appendNamespacePrefix'],
        'comment': value['comment'],
    };
}

