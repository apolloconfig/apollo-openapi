/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 命名空间灰度删除发布请求数据传输对象，用于创建删除特定配置项的灰度发布
 * @export
 * @interface NamespaceGrayDelReleaseDTO
 */
export interface NamespaceGrayDelReleaseDTO {
    /**
     * 发布标题，用于标识这次灰度删除发布的名称或版本号
     * @type {string}
     * @memberof NamespaceGrayDelReleaseDTO
     */
    releaseTitle?: string;
    /**
     * 发布备注，详细描述本次灰度删除发布的目的和删除的配置项
     * @type {string}
     * @memberof NamespaceGrayDelReleaseDTO
     */
    releaseComment?: string;
    /**
     * 发布操作者用户名，记录是谁执行了这次灰度删除发布操作
     * @type {string}
     * @memberof NamespaceGrayDelReleaseDTO
     */
    releasedBy?: string;
    /**
     * 是否为紧急发布，紧急发布可能会跳过某些审核流程
     * @type {boolean}
     * @memberof NamespaceGrayDelReleaseDTO
     */
    isEmergencyPublish?: boolean;
    /**
     * 需要在灰度发布中删除的配置项键名列表
     * @type {Array<string>}
     * @memberof NamespaceGrayDelReleaseDTO
     */
    grayDelKeys?: Array<string>;
}

/**
 * Check if a given object implements the NamespaceGrayDelReleaseDTO interface.
 */
export function instanceOfNamespaceGrayDelReleaseDTO(value: object): value is NamespaceGrayDelReleaseDTO {
    return true;
}

export function NamespaceGrayDelReleaseDTOFromJSON(json: any): NamespaceGrayDelReleaseDTO {
    return NamespaceGrayDelReleaseDTOFromJSONTyped(json, false);
}

export function NamespaceGrayDelReleaseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespaceGrayDelReleaseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'releaseTitle': json['releaseTitle'] == null ? undefined : json['releaseTitle'],
        'releaseComment': json['releaseComment'] == null ? undefined : json['releaseComment'],
        'releasedBy': json['releasedBy'] == null ? undefined : json['releasedBy'],
        'isEmergencyPublish': json['isEmergencyPublish'] == null ? undefined : json['isEmergencyPublish'],
        'grayDelKeys': json['grayDelKeys'] == null ? undefined : json['grayDelKeys'],
    };
}

export function NamespaceGrayDelReleaseDTOToJSON(json: any): NamespaceGrayDelReleaseDTO {
    return NamespaceGrayDelReleaseDTOToJSONTyped(json, false);
}

export function NamespaceGrayDelReleaseDTOToJSONTyped(value?: NamespaceGrayDelReleaseDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'releaseTitle': value['releaseTitle'],
        'releaseComment': value['releaseComment'],
        'releasedBy': value['releasedBy'],
        'isEmergencyPublish': value['isEmergencyPublish'],
        'grayDelKeys': value['grayDelKeys'],
    };
}

