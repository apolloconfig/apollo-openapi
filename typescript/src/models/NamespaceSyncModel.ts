/* tslint:disable */
/* eslint-disable */
/**
 * Apollo OpenAPI
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NamespaceIdentifier } from './NamespaceIdentifier';
import {
    NamespaceIdentifierFromJSON,
    NamespaceIdentifierFromJSONTyped,
    NamespaceIdentifierToJSON,
    NamespaceIdentifierToJSONTyped,
} from './NamespaceIdentifier';
import type { ItemDTO } from './ItemDTO';
import {
    ItemDTOFromJSON,
    ItemDTOFromJSONTyped,
    ItemDTOToJSON,
    ItemDTOToJSONTyped,
} from './ItemDTO';

/**
 * 
 * @export
 * @interface NamespaceSyncModel
 */
export interface NamespaceSyncModel {
    /**
     * 
     * @type {Array<NamespaceIdentifier>}
     * @memberof NamespaceSyncModel
     */
    syncToNamespaces?: Array<NamespaceIdentifier>;
    /**
     * 
     * @type {Array<ItemDTO>}
     * @memberof NamespaceSyncModel
     */
    syncItems?: Array<ItemDTO>;
}

/**
 * Check if a given object implements the NamespaceSyncModel interface.
 */
export function instanceOfNamespaceSyncModel(value: object): value is NamespaceSyncModel {
    return true;
}

export function NamespaceSyncModelFromJSON(json: any): NamespaceSyncModel {
    return NamespaceSyncModelFromJSONTyped(json, false);
}

export function NamespaceSyncModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespaceSyncModel {
    if (json == null) {
        return json;
    }
    return {
        
        'syncToNamespaces': json['syncToNamespaces'] == null ? undefined : ((json['syncToNamespaces'] as Array<any>).map(NamespaceIdentifierFromJSON)),
        'syncItems': json['syncItems'] == null ? undefined : ((json['syncItems'] as Array<any>).map(ItemDTOFromJSON)),
    };
}

export function NamespaceSyncModelToJSON(json: any): NamespaceSyncModel {
    return NamespaceSyncModelToJSONTyped(json, false);
}

export function NamespaceSyncModelToJSONTyped(value?: NamespaceSyncModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'syncToNamespaces': value['syncToNamespaces'] == null ? undefined : ((value['syncToNamespaces'] as Array<any>).map(NamespaceIdentifierToJSON)),
        'syncItems': value['syncItems'] == null ? undefined : ((value['syncItems'] as Array<any>).map(ItemDTOToJSON)),
    };
}

