/*
 * Apollo OpenAPI
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OpenItemDTO;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OpenItemChangeSets
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OpenItemChangeSets {
  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_BY = "dataChangeCreatedBy";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_BY)
  private String dataChangeCreatedBy;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY = "dataChangeLastModifiedBy";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY)
  private String dataChangeLastModifiedBy;

  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_BY_DISPLAY_NAME = "dataChangeCreatedByDisplayName";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_BY_DISPLAY_NAME)
  private String dataChangeCreatedByDisplayName;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY_DISPLAY_NAME = "dataChangeLastModifiedByDisplayName";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY_DISPLAY_NAME)
  private String dataChangeLastModifiedByDisplayName;

  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_TIME = "dataChangeCreatedTime";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_TIME)
  private String dataChangeCreatedTime;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_TIME = "dataChangeLastModifiedTime";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_TIME)
  private String dataChangeLastModifiedTime;

  public static final String SERIALIZED_NAME_CREATE_ITEMS = "createItems";
  @SerializedName(SERIALIZED_NAME_CREATE_ITEMS)
  private List<OpenItemDTO> createItems = null;

  public static final String SERIALIZED_NAME_UPDATE_ITEMS = "updateItems";
  @SerializedName(SERIALIZED_NAME_UPDATE_ITEMS)
  private List<OpenItemDTO> updateItems = null;

  public static final String SERIALIZED_NAME_DELETE_ITEMS = "deleteItems";
  @SerializedName(SERIALIZED_NAME_DELETE_ITEMS)
  private List<OpenItemDTO> deleteItems = null;

  public OpenItemChangeSets() {
  }

  public OpenItemChangeSets dataChangeCreatedBy(String dataChangeCreatedBy) {

    this.dataChangeCreatedBy = dataChangeCreatedBy;
    return this;
  }

   /**
   * 变更集合创建者用户名
   * @return dataChangeCreatedBy
  **/
  @javax.annotation.Nullable
  public String getDataChangeCreatedBy() {
    return dataChangeCreatedBy;
  }


  public void setDataChangeCreatedBy(String dataChangeCreatedBy) {
    this.dataChangeCreatedBy = dataChangeCreatedBy;
  }


  public OpenItemChangeSets dataChangeLastModifiedBy(String dataChangeLastModifiedBy) {

    this.dataChangeLastModifiedBy = dataChangeLastModifiedBy;
    return this;
  }

   /**
   * 变更集合最后修改者用户名
   * @return dataChangeLastModifiedBy
  **/
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedBy() {
    return dataChangeLastModifiedBy;
  }


  public void setDataChangeLastModifiedBy(String dataChangeLastModifiedBy) {
    this.dataChangeLastModifiedBy = dataChangeLastModifiedBy;
  }


  public OpenItemChangeSets dataChangeCreatedByDisplayName(String dataChangeCreatedByDisplayName) {

    this.dataChangeCreatedByDisplayName = dataChangeCreatedByDisplayName;
    return this;
  }

   /**
   * 创建者显示名
   * @return dataChangeCreatedByDisplayName
  **/
  @javax.annotation.Nullable
  public String getDataChangeCreatedByDisplayName() {
    return dataChangeCreatedByDisplayName;
  }


  public void setDataChangeCreatedByDisplayName(String dataChangeCreatedByDisplayName) {
    this.dataChangeCreatedByDisplayName = dataChangeCreatedByDisplayName;
  }


  public OpenItemChangeSets dataChangeLastModifiedByDisplayName(String dataChangeLastModifiedByDisplayName) {

    this.dataChangeLastModifiedByDisplayName = dataChangeLastModifiedByDisplayName;
    return this;
  }

   /**
   * 最后修改者显示名
   * @return dataChangeLastModifiedByDisplayName
  **/
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedByDisplayName() {
    return dataChangeLastModifiedByDisplayName;
  }


  public void setDataChangeLastModifiedByDisplayName(String dataChangeLastModifiedByDisplayName) {
    this.dataChangeLastModifiedByDisplayName = dataChangeLastModifiedByDisplayName;
  }


  public OpenItemChangeSets dataChangeCreatedTime(String dataChangeCreatedTime) {

    this.dataChangeCreatedTime = dataChangeCreatedTime;
    return this;
  }

   /**
   * 变更集合创建时间（ISO 8601）
   * @return dataChangeCreatedTime
  **/
  @javax.annotation.Nullable
  public String getDataChangeCreatedTime() {
    return dataChangeCreatedTime;
  }


  public void setDataChangeCreatedTime(String dataChangeCreatedTime) {
    this.dataChangeCreatedTime = dataChangeCreatedTime;
  }


  public OpenItemChangeSets dataChangeLastModifiedTime(String dataChangeLastModifiedTime) {

    this.dataChangeLastModifiedTime = dataChangeLastModifiedTime;
    return this;
  }

   /**
   * 变更集合最后修改时间（ISO 8601）
   * @return dataChangeLastModifiedTime
  **/
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedTime() {
    return dataChangeLastModifiedTime;
  }


  public void setDataChangeLastModifiedTime(String dataChangeLastModifiedTime) {
    this.dataChangeLastModifiedTime = dataChangeLastModifiedTime;
  }


  public OpenItemChangeSets createItems(List<OpenItemDTO> createItems) {

    this.createItems = createItems;
    return this;
  }

  public OpenItemChangeSets addCreateItemsItem(OpenItemDTO createItemsItem) {
    if (this.createItems == null) {
      this.createItems = null;
    }
    this.createItems.add(createItemsItem);
    return this;
  }

   /**
   * 待创建的配置项列表
   * @return createItems
  **/
  @javax.annotation.Nullable
  public List<OpenItemDTO> getCreateItems() {
    return createItems;
  }


  public void setCreateItems(List<OpenItemDTO> createItems) {
    this.createItems = createItems;
  }


  public OpenItemChangeSets updateItems(List<OpenItemDTO> updateItems) {

    this.updateItems = updateItems;
    return this;
  }

  public OpenItemChangeSets addUpdateItemsItem(OpenItemDTO updateItemsItem) {
    if (this.updateItems == null) {
      this.updateItems = null;
    }
    this.updateItems.add(updateItemsItem);
    return this;
  }

   /**
   * 待更新的配置项列表
   * @return updateItems
  **/
  @javax.annotation.Nullable
  public List<OpenItemDTO> getUpdateItems() {
    return updateItems;
  }


  public void setUpdateItems(List<OpenItemDTO> updateItems) {
    this.updateItems = updateItems;
  }


  public OpenItemChangeSets deleteItems(List<OpenItemDTO> deleteItems) {

    this.deleteItems = deleteItems;
    return this;
  }

  public OpenItemChangeSets addDeleteItemsItem(OpenItemDTO deleteItemsItem) {
    if (this.deleteItems == null) {
      this.deleteItems = null;
    }
    this.deleteItems.add(deleteItemsItem);
    return this;
  }

   /**
   * 待删除的配置项列表
   * @return deleteItems
  **/
  @javax.annotation.Nullable
  public List<OpenItemDTO> getDeleteItems() {
    return deleteItems;
  }


  public void setDeleteItems(List<OpenItemDTO> deleteItems) {
    this.deleteItems = deleteItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenItemChangeSets openItemChangeSets = (OpenItemChangeSets) o;
    return Objects.equals(this.dataChangeCreatedBy, openItemChangeSets.dataChangeCreatedBy) &&
        Objects.equals(this.dataChangeLastModifiedBy, openItemChangeSets.dataChangeLastModifiedBy) &&
        Objects.equals(this.dataChangeCreatedByDisplayName, openItemChangeSets.dataChangeCreatedByDisplayName) &&
        Objects.equals(this.dataChangeLastModifiedByDisplayName, openItemChangeSets.dataChangeLastModifiedByDisplayName) &&
        Objects.equals(this.dataChangeCreatedTime, openItemChangeSets.dataChangeCreatedTime) &&
        Objects.equals(this.dataChangeLastModifiedTime, openItemChangeSets.dataChangeLastModifiedTime) &&
        Objects.equals(this.createItems, openItemChangeSets.createItems) &&
        Objects.equals(this.updateItems, openItemChangeSets.updateItems) &&
        Objects.equals(this.deleteItems, openItemChangeSets.deleteItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataChangeCreatedBy, dataChangeLastModifiedBy, dataChangeCreatedByDisplayName, dataChangeLastModifiedByDisplayName, dataChangeCreatedTime, dataChangeLastModifiedTime, createItems, updateItems, deleteItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenItemChangeSets {\n");
    sb.append("    dataChangeCreatedBy: ").append(toIndentedString(dataChangeCreatedBy)).append("\n");
    sb.append("    dataChangeLastModifiedBy: ").append(toIndentedString(dataChangeLastModifiedBy)).append("\n");
    sb.append("    dataChangeCreatedByDisplayName: ").append(toIndentedString(dataChangeCreatedByDisplayName)).append("\n");
    sb.append("    dataChangeLastModifiedByDisplayName: ").append(toIndentedString(dataChangeLastModifiedByDisplayName)).append("\n");
    sb.append("    dataChangeCreatedTime: ").append(toIndentedString(dataChangeCreatedTime)).append("\n");
    sb.append("    dataChangeLastModifiedTime: ").append(toIndentedString(dataChangeLastModifiedTime)).append("\n");
    sb.append("    createItems: ").append(toIndentedString(createItems)).append("\n");
    sb.append("    updateItems: ").append(toIndentedString(updateItems)).append("\n");
    sb.append("    deleteItems: ").append(toIndentedString(deleteItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataChangeCreatedBy");
    openapiFields.add("dataChangeLastModifiedBy");
    openapiFields.add("dataChangeCreatedByDisplayName");
    openapiFields.add("dataChangeLastModifiedByDisplayName");
    openapiFields.add("dataChangeCreatedTime");
    openapiFields.add("dataChangeLastModifiedTime");
    openapiFields.add("createItems");
    openapiFields.add("updateItems");
    openapiFields.add("deleteItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OpenItemChangeSets
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OpenItemChangeSets.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpenItemChangeSets is not found in the empty JSON string", OpenItemChangeSets.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OpenItemChangeSets.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OpenItemChangeSets` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("dataChangeCreatedBy") != null && !jsonObj.get("dataChangeCreatedBy").isJsonNull()) && !jsonObj.get("dataChangeCreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedBy").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedBy") != null && !jsonObj.get("dataChangeLastModifiedBy").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedBy").toString()));
      }
      if ((jsonObj.get("dataChangeCreatedByDisplayName") != null && !jsonObj.get("dataChangeCreatedByDisplayName").isJsonNull()) && !jsonObj.get("dataChangeCreatedByDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedByDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedByDisplayName").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedByDisplayName") != null && !jsonObj.get("dataChangeLastModifiedByDisplayName").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedByDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedByDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedByDisplayName").toString()));
      }
      if ((jsonObj.get("dataChangeCreatedTime") != null && !jsonObj.get("dataChangeCreatedTime").isJsonNull()) && !jsonObj.get("dataChangeCreatedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedTime").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedTime") != null && !jsonObj.get("dataChangeLastModifiedTime").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedTime").toString()));
      }
      if (jsonObj.get("createItems") != null && !jsonObj.get("createItems").isJsonNull()) {
        JsonArray jsonArraycreateItems = jsonObj.getAsJsonArray("createItems");
        if (jsonArraycreateItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("createItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `createItems` to be an array in the JSON string but got `%s`", jsonObj.get("createItems").toString()));
          }

          // validate the optional field `createItems` (array)
          for (int i = 0; i < jsonArraycreateItems.size(); i++) {
            OpenItemDTO.validateJsonObject(jsonArraycreateItems.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("updateItems") != null && !jsonObj.get("updateItems").isJsonNull()) {
        JsonArray jsonArrayupdateItems = jsonObj.getAsJsonArray("updateItems");
        if (jsonArrayupdateItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("updateItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `updateItems` to be an array in the JSON string but got `%s`", jsonObj.get("updateItems").toString()));
          }

          // validate the optional field `updateItems` (array)
          for (int i = 0; i < jsonArrayupdateItems.size(); i++) {
            OpenItemDTO.validateJsonObject(jsonArrayupdateItems.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("deleteItems") != null && !jsonObj.get("deleteItems").isJsonNull()) {
        JsonArray jsonArraydeleteItems = jsonObj.getAsJsonArray("deleteItems");
        if (jsonArraydeleteItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("deleteItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `deleteItems` to be an array in the JSON string but got `%s`", jsonObj.get("deleteItems").toString()));
          }

          // validate the optional field `deleteItems` (array)
          for (int i = 0; i < jsonArraydeleteItems.size(); i++) {
            OpenItemDTO.validateJsonObject(jsonArraydeleteItems.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpenItemChangeSets.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpenItemChangeSets' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpenItemChangeSets> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpenItemChangeSets.class));

       return (TypeAdapter<T>) new TypeAdapter<OpenItemChangeSets>() {
           @Override
           public void write(JsonWriter out, OpenItemChangeSets value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OpenItemChangeSets read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpenItemChangeSets given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpenItemChangeSets
  * @throws IOException if the JSON string is invalid with respect to OpenItemChangeSets
  */
  public static OpenItemChangeSets fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpenItemChangeSets.class);
  }

 /**
  * Convert an instance of OpenItemChangeSets to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
