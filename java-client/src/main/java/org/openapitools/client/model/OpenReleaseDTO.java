/*
 * Apollo OpenAPI
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Apollo发布信息数据传输对象，表示一次配置发布的完整信息
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-19T21:51:04.875+08:00[Asia/Shanghai]")
public class OpenReleaseDTO {
  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_BY = "dataChangeCreatedBy";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_BY)
  private String dataChangeCreatedBy;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY = "dataChangeLastModifiedBy";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_BY)
  private String dataChangeLastModifiedBy;

  public static final String SERIALIZED_NAME_DATA_CHANGE_CREATED_TIME = "dataChangeCreatedTime";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_CREATED_TIME)
  private String dataChangeCreatedTime;

  public static final String SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_TIME = "dataChangeLastModifiedTime";
  @SerializedName(SERIALIZED_NAME_DATA_CHANGE_LAST_MODIFIED_TIME)
  private String dataChangeLastModifiedTime;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_NAMESPACE_NAME = "namespaceName";
  @SerializedName(SERIALIZED_NAME_NAMESPACE_NAME)
  private String namespaceName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CONFIGURATIONS = "configurations";
  @SerializedName(SERIALIZED_NAME_CONFIGURATIONS)
  private Map<String, String> configurations = new HashMap<>();

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public OpenReleaseDTO() {
  }

  public OpenReleaseDTO dataChangeCreatedBy(String dataChangeCreatedBy) {

    this.dataChangeCreatedBy = dataChangeCreatedBy;
    return this;
  }

   /**
   * 发布创建者用户名，记录是谁创建了这次发布
   * @return dataChangeCreatedBy
  **/
  @javax.annotation.Nullable
  public String getDataChangeCreatedBy() {
    return dataChangeCreatedBy;
  }


  public void setDataChangeCreatedBy(String dataChangeCreatedBy) {
    this.dataChangeCreatedBy = dataChangeCreatedBy;
  }


  public OpenReleaseDTO dataChangeLastModifiedBy(String dataChangeLastModifiedBy) {

    this.dataChangeLastModifiedBy = dataChangeLastModifiedBy;
    return this;
  }

   /**
   * 发布最后修改者用户名，记录最后一次修改发布信息的用户
   * @return dataChangeLastModifiedBy
  **/
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedBy() {
    return dataChangeLastModifiedBy;
  }


  public void setDataChangeLastModifiedBy(String dataChangeLastModifiedBy) {
    this.dataChangeLastModifiedBy = dataChangeLastModifiedBy;
  }


  public OpenReleaseDTO dataChangeCreatedTime(String dataChangeCreatedTime) {

    this.dataChangeCreatedTime = dataChangeCreatedTime;
    return this;
  }

   /**
   * 发布创建时间，ISO 8601格式的时间戳
   * @return dataChangeCreatedTime
  **/
  @javax.annotation.Nullable
  public String getDataChangeCreatedTime() {
    return dataChangeCreatedTime;
  }


  public void setDataChangeCreatedTime(String dataChangeCreatedTime) {
    this.dataChangeCreatedTime = dataChangeCreatedTime;
  }


  public OpenReleaseDTO dataChangeLastModifiedTime(String dataChangeLastModifiedTime) {

    this.dataChangeLastModifiedTime = dataChangeLastModifiedTime;
    return this;
  }

   /**
   * 发布最后修改时间，ISO 8601格式的时间戳
   * @return dataChangeLastModifiedTime
  **/
  @javax.annotation.Nullable
  public String getDataChangeLastModifiedTime() {
    return dataChangeLastModifiedTime;
  }


  public void setDataChangeLastModifiedTime(String dataChangeLastModifiedTime) {
    this.dataChangeLastModifiedTime = dataChangeLastModifiedTime;
  }


  public OpenReleaseDTO id(Long id) {

    this.id = id;
    return this;
  }

   /**
   * 发布记录的唯一标识符，系统自动生成
   * @return id
  **/
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public OpenReleaseDTO appId(String appId) {

    this.appId = appId;
    return this;
  }

   /**
   * 所属应用的唯一标识符
   * @return appId
  **/
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public OpenReleaseDTO clusterName(String clusterName) {

    this.clusterName = clusterName;
    return this;
  }

   /**
   * 所属集群的名称
   * @return clusterName
  **/
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }


  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public OpenReleaseDTO namespaceName(String namespaceName) {

    this.namespaceName = namespaceName;
    return this;
  }

   /**
   * 所属命名空间的名称
   * @return namespaceName
  **/
  @javax.annotation.Nullable
  public String getNamespaceName() {
    return namespaceName;
  }


  public void setNamespaceName(String namespaceName) {
    this.namespaceName = namespaceName;
  }


  public OpenReleaseDTO name(String name) {

    this.name = name;
    return this;
  }

   /**
   * 发布名称，用于标识这次发布的版本或描述
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public OpenReleaseDTO configurations(Map<String, String> configurations) {

    this.configurations = configurations;
    return this;
  }

  public OpenReleaseDTO putConfigurationsItem(String key, String configurationsItem) {
    if (this.configurations == null) {
      this.configurations = new HashMap<>();
    }
    this.configurations.put(key, configurationsItem);
    return this;
  }

   /**
   * Get configurations
   * @return configurations
  **/
  @javax.annotation.Nullable
  public Map<String, String> getConfigurations() {
    return configurations;
  }


  public void setConfigurations(Map<String, String> configurations) {
    this.configurations = configurations;
  }


  public OpenReleaseDTO comment(String comment) {

    this.comment = comment;
    return this;
  }

   /**
   * 发布备注，描述本次发布的变更内容和目的
   * @return comment
  **/
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenReleaseDTO openReleaseDTO = (OpenReleaseDTO) o;
    return Objects.equals(this.dataChangeCreatedBy, openReleaseDTO.dataChangeCreatedBy) &&
        Objects.equals(this.dataChangeLastModifiedBy, openReleaseDTO.dataChangeLastModifiedBy) &&
        Objects.equals(this.dataChangeCreatedTime, openReleaseDTO.dataChangeCreatedTime) &&
        Objects.equals(this.dataChangeLastModifiedTime, openReleaseDTO.dataChangeLastModifiedTime) &&
        Objects.equals(this.id, openReleaseDTO.id) &&
        Objects.equals(this.appId, openReleaseDTO.appId) &&
        Objects.equals(this.clusterName, openReleaseDTO.clusterName) &&
        Objects.equals(this.namespaceName, openReleaseDTO.namespaceName) &&
        Objects.equals(this.name, openReleaseDTO.name) &&
        Objects.equals(this.configurations, openReleaseDTO.configurations) &&
        Objects.equals(this.comment, openReleaseDTO.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataChangeCreatedBy, dataChangeLastModifiedBy, dataChangeCreatedTime, dataChangeLastModifiedTime, id, appId, clusterName, namespaceName, name, configurations, comment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenReleaseDTO {\n");
    sb.append("    dataChangeCreatedBy: ").append(toIndentedString(dataChangeCreatedBy)).append("\n");
    sb.append("    dataChangeLastModifiedBy: ").append(toIndentedString(dataChangeLastModifiedBy)).append("\n");
    sb.append("    dataChangeCreatedTime: ").append(toIndentedString(dataChangeCreatedTime)).append("\n");
    sb.append("    dataChangeLastModifiedTime: ").append(toIndentedString(dataChangeLastModifiedTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    namespaceName: ").append(toIndentedString(namespaceName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataChangeCreatedBy");
    openapiFields.add("dataChangeLastModifiedBy");
    openapiFields.add("dataChangeCreatedTime");
    openapiFields.add("dataChangeLastModifiedTime");
    openapiFields.add("id");
    openapiFields.add("appId");
    openapiFields.add("clusterName");
    openapiFields.add("namespaceName");
    openapiFields.add("name");
    openapiFields.add("configurations");
    openapiFields.add("comment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OpenReleaseDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OpenReleaseDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpenReleaseDTO is not found in the empty JSON string", OpenReleaseDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OpenReleaseDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OpenReleaseDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("dataChangeCreatedBy") != null && !jsonObj.get("dataChangeCreatedBy").isJsonNull()) && !jsonObj.get("dataChangeCreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedBy").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedBy") != null && !jsonObj.get("dataChangeLastModifiedBy").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedBy").toString()));
      }
      if ((jsonObj.get("dataChangeCreatedTime") != null && !jsonObj.get("dataChangeCreatedTime").isJsonNull()) && !jsonObj.get("dataChangeCreatedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeCreatedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeCreatedTime").toString()));
      }
      if ((jsonObj.get("dataChangeLastModifiedTime") != null && !jsonObj.get("dataChangeLastModifiedTime").isJsonNull()) && !jsonObj.get("dataChangeLastModifiedTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataChangeLastModifiedTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataChangeLastModifiedTime").toString()));
      }
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) && !jsonObj.get("clusterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clusterName").toString()));
      }
      if ((jsonObj.get("namespaceName") != null && !jsonObj.get("namespaceName").isJsonNull()) && !jsonObj.get("namespaceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namespaceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namespaceName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpenReleaseDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpenReleaseDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpenReleaseDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpenReleaseDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<OpenReleaseDTO>() {
           @Override
           public void write(JsonWriter out, OpenReleaseDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OpenReleaseDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpenReleaseDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpenReleaseDTO
  * @throws IOException if the JSON string is invalid with respect to OpenReleaseDTO
  */
  public static OpenReleaseDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpenReleaseDTO.class);
  }

 /**
  * Convert an instance of OpenReleaseDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}
