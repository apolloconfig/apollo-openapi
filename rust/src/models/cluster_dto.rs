/*
 * Apollo OpenAPI
 *
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterDto {
    /// 
    #[serde(rename = "dataChangeCreatedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_created_by: Option<String>,
    /// 
    #[serde(rename = "dataChangeLastModifiedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_by: Option<String>,
    /// 
    #[serde(rename = "dataChangeCreatedByDisplayName", skip_serializing_if = "Option::is_none")]
    pub data_change_created_by_display_name: Option<String>,
    /// 
    #[serde(rename = "dataChangeLastModifiedByDisplayName", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_by_display_name: Option<String>,
    /// 
    #[serde(rename = "dataChangeCreatedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_created_time: Option<String>,
    /// 
    #[serde(rename = "dataChangeLastModifiedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_time: Option<String>,
    /// 
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// 
    #[serde(rename = "name")]
    pub name: String,
    /// 
    #[serde(rename = "appId")]
    pub app_id: String,
    /// 
    #[serde(rename = "parentClusterId", skip_serializing_if = "Option::is_none")]
    pub parent_cluster_id: Option<i64>,
    /// 
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
}

impl ClusterDto {
    pub fn new(name: String, app_id: String) -> ClusterDto {
        ClusterDto {
            data_change_created_by: None,
            data_change_last_modified_by: None,
            data_change_created_by_display_name: None,
            data_change_last_modified_by_display_name: None,
            data_change_created_time: None,
            data_change_last_modified_time: None,
            id: None,
            name,
            app_id,
            parent_cluster_id: None,
            comment: None,
        }
    }
}

