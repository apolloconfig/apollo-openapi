/*
 * Apollo OpenAPI
 *
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// OpenPageDtoOpenInstanceDto : 分页实例数据传输对象，用于返回分页查询的实例列表结果



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OpenPageDtoOpenInstanceDto {
    /// 当前页码，从0开始计数
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// 每页显示的记录数量
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    /// 总记录数，符合查询条件的实例总数量
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i64>,
    /// 当前页的实例列表，包含具体的实例数据
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<crate::models::OpenInstanceDto>>,
}

impl OpenPageDtoOpenInstanceDto {
    /// 分页实例数据传输对象，用于返回分页查询的实例列表结果
    pub fn new() -> OpenPageDtoOpenInstanceDto {
        OpenPageDtoOpenInstanceDto {
            page: None,
            size: None,
            total: None,
            content: None,
        }
    }
}
