/*
 * Apollo OpenAPI
 *
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OpenGrayReleaseRuleDto : Apollo灰度发布规则数据传输对象，表示完整的灰度发布规则配置
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OpenGrayReleaseRuleDto {
    /// 灰度规则创建者用户名，记录是谁创建了这个灰度发布规则
    #[serde(rename = "dataChangeCreatedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_created_by: Option<String>,
    /// 灰度规则最后修改者用户名，记录最后一次修改规则的用户
    #[serde(rename = "dataChangeLastModifiedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_by: Option<String>,
    /// 灰度规则创建时间，ISO 8601格式的时间戳
    #[serde(rename = "dataChangeCreatedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_created_time: Option<String>,
    /// 灰度规则最后修改时间，ISO 8601格式的时间戳
    #[serde(rename = "dataChangeLastModifiedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_time: Option<String>,
    /// 所属应用的唯一标识符
    #[serde(rename = "appId", skip_serializing_if = "Option::is_none")]
    pub app_id: Option<String>,
    /// 所属集群的名称
    #[serde(rename = "clusterName", skip_serializing_if = "Option::is_none")]
    pub cluster_name: Option<String>,
    /// 所属命名空间的名称
    #[serde(rename = "namespaceName", skip_serializing_if = "Option::is_none")]
    pub namespace_name: Option<String>,
    /// 灰度分支名称，标识灰度发布的分支
    #[serde(rename = "branchName", skip_serializing_if = "Option::is_none")]
    pub branch_name: Option<String>,
    /// 灰度发布规则项列表，包含具体的灰度规则条件
    #[serde(rename = "ruleItems", skip_serializing_if = "Option::is_none")]
    pub rule_items: Option<Vec<models::OpenGrayReleaseRuleItemDto>>,
}

impl OpenGrayReleaseRuleDto {
    /// Apollo灰度发布规则数据传输对象，表示完整的灰度发布规则配置
    pub fn new() -> OpenGrayReleaseRuleDto {
        OpenGrayReleaseRuleDto {
            data_change_created_by: None,
            data_change_last_modified_by: None,
            data_change_created_time: None,
            data_change_last_modified_time: None,
            app_id: None,
            cluster_name: None,
            namespace_name: None,
            branch_name: None,
            rule_items: None,
        }
    }
}

