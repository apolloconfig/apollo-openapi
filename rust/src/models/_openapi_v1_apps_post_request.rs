/*
 * Apollo OpenAPI
 *
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OpenapiV1AppsPostRequest : 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OpenapiV1AppsPostRequest {
    #[serde(rename = "app")]
    pub app: Box<models::OpenAppDto>,
    /// 是否将应用角色分配给当前用户。当设置为true时，当前token用户将获得该应用的完全操作权限
    #[serde(rename = "assignAppRoleToSelf")]
    pub assign_app_role_to_self: bool,
    /// 应用管理员用户名列表。应用负责人默认具有项目管理员权限。管理员可以创建命名空间、集群并分配用户权限
    #[serde(rename = "admins")]
    pub admins: Vec<String>,
}

impl OpenapiV1AppsPostRequest {
    /// 
    pub fn new(app: models::OpenAppDto, assign_app_role_to_self: bool, admins: Vec<String>) -> OpenapiV1AppsPostRequest {
        OpenapiV1AppsPostRequest {
            app: Box::new(app),
            assign_app_role_to_self,
            admins,
        }
    }
}

