/*
 * Apollo OpenAPI
 *
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// MultiResponseEntity : A response container holding multiple RichResponseEntity objects



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MultiResponseEntity {
    /// Overall HTTP status code
    #[serde(rename = "code")]
    pub code: i32,
    /// List of rich response entities
    #[serde(rename = "entities")]
    pub entities: Vec<crate::models::RichResponseEntity>,
}

impl MultiResponseEntity {
    /// A response container holding multiple RichResponseEntity objects
    pub fn new(code: i32, entities: Vec<crate::models::RichResponseEntity>) -> MultiResponseEntity {
        MultiResponseEntity {
            code,
            entities,
        }
    }
}
