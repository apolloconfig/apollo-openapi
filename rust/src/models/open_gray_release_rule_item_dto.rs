/*
 * Apollo OpenAPI
 *
 * Apollo配置中心OpenAPI接口文档  ## 认证方式  所有API接口都需要通过Authorization header进行身份验证。  ### 获取Token的方式：  1. **Portal管理界面获取**：    - 登录Apollo Portal管理界面    - 进入\"管理员工具\" -> \"开放平台授权管理\"    - 创建第三方应用，获取Token  2. **Token格式**：    ```    Authorization: token_value    ```  3. **Token权限**：    - Token具有对应应用的读写权限    - 不同Token可能有不同的环境和命名空间权限    - 建议为不同用途创建不同的Token  ### 使用示例： ```bash curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\      -H \"Authorization: your_token_here\" ``` 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OpenGrayReleaseRuleItemDto : Apollo灰度发布规则项数据传输对象，表示灰度发布的具体规则条件
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OpenGrayReleaseRuleItemDto {
    /// 客户端应用ID，指定哪个应用可以获取灰度配置
    #[serde(rename = "clientAppId", skip_serializing_if = "Option::is_none")]
    pub client_app_id: Option<String>,
    /// 客户端IP地址列表，指定哪些IP地址可以获取灰度配置
    #[serde(rename = "clientIpList", skip_serializing_if = "Option::is_none")]
    pub client_ip_list: Option<Vec<String>>,
    /// 客户端标签列表，通过标签来识别可以获取灰度配置的客户端
    #[serde(rename = "clientLabelList", skip_serializing_if = "Option::is_none")]
    pub client_label_list: Option<Vec<String>>,
}

impl OpenGrayReleaseRuleItemDto {
    /// Apollo灰度发布规则项数据传输对象，表示灰度发布的具体规则条件
    pub fn new() -> OpenGrayReleaseRuleItemDto {
        OpenGrayReleaseRuleItemDto {
            client_app_id: None,
            client_ip_list: None,
            client_label_list: None,
        }
    }
}

