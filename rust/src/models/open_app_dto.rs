/*
 * Apollo OpenAPI
 *
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// OpenAppDto : Apollo应用信息数据传输对象，包含应用的基本信息和元数据



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OpenAppDto {
    /// 数据创建者用户名，记录是谁创建了这个应用
    #[serde(rename = "dataChangeCreatedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_created_by: Option<String>,
    /// 数据最后修改者用户名，记录最后一次修改应用信息的用户
    #[serde(rename = "dataChangeLastModifiedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_by: Option<String>,
    /// 数据创建时间，ISO 8601格式的时间戳
    #[serde(rename = "dataChangeCreatedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_created_time: Option<String>,
    /// 数据最后修改时间，ISO 8601格式的时间戳
    #[serde(rename = "dataChangeLastModifiedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_time: Option<String>,
    /// 应用名称，用于显示的友好名称
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// 应用唯一标识符，全局唯一的应用ID
    #[serde(rename = "appId", skip_serializing_if = "Option::is_none")]
    pub app_id: Option<String>,
    /// 组织ID，应用所属组织的唯一标识
    #[serde(rename = "orgId", skip_serializing_if = "Option::is_none")]
    pub org_id: Option<String>,
    /// 组织名称，应用所属组织的显示名称
    #[serde(rename = "orgName", skip_serializing_if = "Option::is_none")]
    pub org_name: Option<String>,
    /// 应用负责人姓名，应用的主要负责人
    #[serde(rename = "ownerName", skip_serializing_if = "Option::is_none")]
    pub owner_name: Option<String>,
    /// 应用负责人邮箱地址，用于接收应用相关通知
    #[serde(rename = "ownerEmail", skip_serializing_if = "Option::is_none")]
    pub owner_email: Option<String>,
}

impl OpenAppDto {
    /// Apollo应用信息数据传输对象，包含应用的基本信息和元数据
    pub fn new() -> OpenAppDto {
        OpenAppDto {
            data_change_created_by: None,
            data_change_last_modified_by: None,
            data_change_created_time: None,
            data_change_last_modified_time: None,
            name: None,
            app_id: None,
            org_id: None,
            org_name: None,
            owner_name: None,
            owner_email: None,
        }
    }
}
