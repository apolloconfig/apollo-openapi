/*
 * Apollo OpenAPI
 *
 * <p>Apollo配置中心OpenAPI接口文档</p>  <h2>认证方式</h2> <p>所有 API 接口都需要通过 <code>Authorization</code> header 进行身份验证。</p>  <h3>获取 Token 的方式：</h3> <ol>   <li><b>Portal 管理界面获取</b>：登录 Portal → 管理员工具 → 开放平台授权管理 → 创建第三方应用，获取 Token。</li>   <li><b>Token 格式</b>：<code>Authorization: token_value</code></li>   <li><b>Token 权限</b>：按应用/环境/命名空间授予，建议不同用途分别创建。</li> </ol>  <h3>使用示例</h3> <pre><code class=\"language-bash\">curl -X GET \"http://localhost:8070/openapi/v1/apps\" \\ -H \"Authorization: your_token_here\"</code></pre>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OpenItemChangeSets {
    /// 变更集合创建者用户名
    #[serde(rename = "dataChangeCreatedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_created_by: Option<String>,
    /// 变更集合最后修改者用户名
    #[serde(rename = "dataChangeLastModifiedBy", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_by: Option<String>,
    /// 创建者显示名
    #[serde(rename = "dataChangeCreatedByDisplayName", skip_serializing_if = "Option::is_none")]
    pub data_change_created_by_display_name: Option<String>,
    /// 最后修改者显示名
    #[serde(rename = "dataChangeLastModifiedByDisplayName", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_by_display_name: Option<String>,
    /// 变更集合创建时间（ISO 8601）
    #[serde(rename = "dataChangeCreatedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_created_time: Option<String>,
    /// 变更集合最后修改时间（ISO 8601）
    #[serde(rename = "dataChangeLastModifiedTime", skip_serializing_if = "Option::is_none")]
    pub data_change_last_modified_time: Option<String>,
    /// 待创建的配置项列表
    #[serde(rename = "createItems", skip_serializing_if = "Option::is_none")]
    pub create_items: Option<Vec<crate::models::OpenItemDto>>,
    /// 待更新的配置项列表
    #[serde(rename = "updateItems", skip_serializing_if = "Option::is_none")]
    pub update_items: Option<Vec<crate::models::OpenItemDto>>,
    /// 待删除的配置项列表
    #[serde(rename = "deleteItems", skip_serializing_if = "Option::is_none")]
    pub delete_items: Option<Vec<crate::models::OpenItemDto>>,
}

impl OpenItemChangeSets {
    pub fn new() -> OpenItemChangeSets {
        OpenItemChangeSets {
            data_change_created_by: None,
            data_change_last_modified_by: None,
            data_change_created_by_display_name: None,
            data_change_last_modified_by_display_name: None,
            data_change_created_time: None,
            data_change_last_modified_time: None,
            create_items: None,
            update_items: None,
            delete_items: None,
        }
    }
}
